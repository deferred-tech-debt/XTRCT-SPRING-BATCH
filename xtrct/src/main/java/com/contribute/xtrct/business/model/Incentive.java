package com.contribute.xtrct.business.model;import java.util.Date;import java.util.List;/** * Definition of incentive utilized by the offer system. * <p/> * <p>Incentives are associated with, and are a component of an {@code Offer}. * <p/> * They are specific to a ZIP/Postal code and belong to a specific category.</p> * <p/> * <p>The category belongs to a single type * <p/> * (Cash, Finance, Lease Residual, etc.).</p> * * @author Sean O'Dwyer * @author Joe Regnier * @author Pierce Zaifman */public interface Incentive {    /**     * Get an id     *     * @return an id.     */    String getId();    String getIncentiveType();    /**     * Retrieve the financial institutions.     *     * @return {@link List}<{@link FinancialInstitution}> containing financial institutions of incentive.     */    List<FinancialInstitution> getFinancialInstitutionList();    /**     * Retrieve incentive variations.     *     * @return {@link List}<{@link Variation}> containing variations of incentive.     */    List<Variation> getVariationList();    /**     * Retrieve category unique identifier.     *     * @return {@link String} representing unique identifier of incentive category.     */    String getCategoryId();    /**     * Retrieve category description.     *     * @return {@link String} incentive category.     */    String getCategoryDescription();    /**     * Retrieve category group.     *     * @return {@link String} incentive category group.     */    String getCategoryGroup();    /**     * Retrieve name of incentive.     *     * @return {@link String} representing the name of the incentive.     */    String getName();    /**     * Retrieve market.     *     * @return {@link String} representing market to which incentive applies.     */    String getMarket();    /**     * Retrieve group affiliation.     *     * @return {@link String} representing group affiliation to which incentive applies.     */    String getGroupAffiliation();    /**     * Retrieve effective date.     *     * @return {@link Date} incentive is effective.     */    Date getEffectiveDate();    /**     * Retrieve expiry date.     *     * @return {@link Date} incentive expires.     */    Date getExpiryDate();    /**     * Retrieve previous ownership.     *     * @return {@link String} representing previous ownership detail to which incentive applies.     */    String getPreviousOwnership();    /**     * Retrieve vehicle status list.     *     * @return {@link List}<{@link VehicleStatus}> representing vehicle status to which incentive applies.     */    List<VehicleStatus> getVehicleStatuses();    /**     * Retrieve offer type.     *     * @return {@link String} representing offer type to which incentive applies.     */    String getOfferType();    /**     * Retrieve delivery types.     *     * @return {@link List}<{@link DeliveryType}> representing delivery types to which incentive applies.     */    List<DeliveryType> getDeliveryTypes();    Integer getSignatureId();    Integer getSignatureHistoryId();    String getEndRecipient();    String getEligibility();    String getQualification();    String getSource();    String getOrderingCode();    /**     * Get the geography Id.     *     * @return the geography Id.     */    Integer getGeographyId();    /**     * Get the program number.     * @return  the program number.     */    String getProgramNumber();    /**     * Get the program Text     * @return the program Text     */    String getProgramText();    /**     * Get the Vehicle attribute     * @return the Vehicle attribute     */    String getVehicleAttribute();    Integer getTaxRuleId();    Integer getMarketId();    Integer getGroupAffiliationId();    Integer getPreviousOwnershipId();    String getRegion();    Integer getEndRecipientId();    String getTaxRule();    String getGroupAffiliationDetail();    String getPreviousOwnershipDetail();    /**     * Returns true if this incentive is stackable with the other incentive     *     * @param incentive The incentive to see if this incentive is stackable with     * @return true if this incentive is stackable with the other.  Otherwise false     */    boolean isStackableWith(Incentive incentive);}